<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        
        <service id="repositories.ticket.in_memory" class="Tiquette\Infrastructure\Repositories\InMemoryTicketRepository" />

        <service id="repositories.ticket.dbal" class="Tiquette\Infrastructure\Repositories\DbalTicketRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>

        <service id="repositories.ticket" alias="repositories.ticket.dbal" />

        <service id="repositories.member.dbal" class="Tiquette\Infrastructure\Repositories\DbalMemberRepository">
            <argument type="service" id="doctrine.dbal.default_connection" />
        </service>

        <service id="repositories.member" alias="repositories.member.dbal" />

        <service id="app.member_password_encoder" class="Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder">
            <argument>13</argument>
        </service>

        <service id="member_factory" class="AppBundle\Utils\MemberFactory">
            <argument type="service" id="app.member_password_encoder" />
        </service>

        <service id="ticket_factory" class="AppBundle\Utils\TicketFactory" />


        <service id="app.security.member_account_user_provider" class="AppBundle\Security\MemberAccountUserProvider">
            <argument type="service" id="repositories.member" />
        </service>

        <service id="member_user_account_authenticator" class="AppBundle\Security\MemberUserAccountAuthenticator">
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="session" />
        </service>

        <service id="role_promoter" class="AppBundle\Security\RolePromoter">
            <argument type="service" id="repositories.member" />
        </service>

        <service id="commands.promote_member_to_admin" class="AppBundle\Command\PromoteAdminCommand">
            <argument type="service" id="role_promoter" />
            <tag name="console.command" />
        </service>

        <service id="commands.demote_member_to_admin" class="AppBundle\Command\DemoteAdminCommand">
            <argument type="service" id="role_promoter" />
            <tag name="console.command" />
        </service>

    </services>
</container>
